Ac = 0.25
Ai = 100
Ad = 100
initial_Ac = 0.05

max_dt_growth = 1.1
dt_tolerance_factor = 1.1
fixed_dt   = -1.0
max_time = 50.0e-9
max_step = 4000

max_level = 2
ref_ratio = 2 2 2 2 2
tag_buffer_size = 3
refine_thresh = 0.05
regrid_interval = 2 2 2 2 2 2
grid_buffer_size = 1
block_factor =  4
max_grid_size = 64
fill_ratio = 0.85
periodic_bc = 0 0 0

implicitReflux = false
use_limiting = true
sourceNumericalScheme = 2

verbosity = 1
testing = false

checkpoint_interval = -1
plot_interval = 10
plot_prefix  = results/out
chk_prefix = chk

normalization.EBar  = 1e5
normalization.muBar = 0.0382

#this is the length of the longest side
domain_length = 1.5e-2
n_cell = 48 48 192


gas.name          = air
gas.uniformity    = true
gas.density       = 2.688e25
gas.numOfIonSpe   = 2

diffusion_coef = 0.1995

###############################################################
# morrow coefficients, Ek = 1.2e-19 V-m^2

ionization.name       = ionization
ionization.numCoeffs  = 2
ionization.numPieces  = 2
ionization.xlb        = 0 1.5e-19
ionization.A          = 6.619e-21   2.0e-20
                        5.593e-19   7.248e-19
                        
attachment.name       = attachment
attachment.numCoeffs  = 2
attachment.numPieces  = 3
attachment.xlb        = 0   4.7512e-20    1.05e-19
attachment.A          = 0   -2.8930e-23   2.567e-23
                        0   6.089e-4      8.889e-5

mobility.name         = mobility
mobility.numCoeffs    = 2
mobility.numPieces    = 4
mobility.xlb          = 0         2.6e-21     1.0e-20   2.0e-19
mobility.A            = 6.87e24   7.2973e23   1.03e24   7.4e23
                        3.38e2    1.63e4      1.3e4     7.1e4

###############################################################
# initial plasma cloud(s)

iniPlaCloud.bgdDensity = 0.0
iniPlaCloud.number = 1
iniPlaCloud.center = 0.1875e-2 0.1875e-2 0.75e-2
iniPlaCloud.radius = 0.02e-2 0.02e-2 0.02e-2
iniPlaCloud.mag    = 1e20


###############################################################
# diffusion solver inputs

diffusionSolver.num_smooth  = 8
diffusionSolver.tolerance   = 1.0e-10
diffusionSolver.num_mg      = 1
diffusionSolver.norm_thresh = 1.0e-10
diffusionSolver.hang_eps    = 1.0e-10
diffusionSolver.max_iter    = 100
diffusionSolver.verbosity   = 1

# 0 = dirichlet, 1 = neumann, 2 = extrapolate
# zero values for all boundaries; nothing needs to be done for normalization
# future work
diffusion.bc_lo   = 2 2 1
diffusion.bc_hi   = 2 2 2
diffusion.bc_value = 0.


###############################################################
# Poisson's equation solver inputs

PoissonSolver.implicit    = true
PoissonSolver.num_smooth  = 8
PoissonSolver.tolerance   = 1.0e-10
PoissonSolver.num_mg      = 1
PoissonSolver.norm_thresh = 1.0e-10
PoissonSolver.hang_eps    = 1.0e-10
PoissonSolver.max_iter    = 100
PoissonSolver.verbosity   = 1

# 0 = dirichlet, 1 = neumann, 2 = extrapolate, 3 = dirichlet, with linear potential with in z;
EPot.bc_lo     = 3 3 3
EPot.bc_loValue = -4.8e6 -4.8e6 -72000
EPot.bc_hi     = 3 3 3
EPot.bc_hiValue = -4.8e6 -4.8e6 0.


###############################################################
# photoionization solver inputs

PISolver.runSolve = true
# Multigrid PIPISolver parameters
PISolver.verbosity = 3
PISolver.num_smooth = 4
PISolver.num_mg     = 1
PISolver.num_bottom = 1
PISolver.num_pre = 2
PISolver.num_post = 2

PISolver.max_iterations = 100
PISolver.tolerance  = 1.0e-9
PISolver.hang       = 1.0e-10
#PISolver.tolerance  = 1.0e-12
#PISolver.hang       = 1.0e-13

#0 = dirichlet, 1 = neumann, 3 = Robin
# zero values for all boundaries; nothing needs to be done for normalization
# future work
PI1.bc_lo              = 3 3 3
PI1.bc_hi              = 3 3 3
PI2.bc_lo              = 0 0 0
PI2.bc_hi              = 0 0 0
PI2.bc_value           = 0.0
PI3.bc_lo              = 0 0 0
PI3.bc_hi              = 0 0 0
PI3.bc_value           = 0.0
